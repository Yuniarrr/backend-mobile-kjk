no	sub_topic	title	content	detail_content	link_1	link_2	link_3	link_4	link_5	link_6	link_7	link_8	link_9	link_10	link_11	link_12	link_13	link_14	link_15	link_16	link_17	link_18	link_19	link_20
71	Welcome to Linux Unhatched	Welcome!	Hello, and welcome to the NDG Linux Unhatched Module! We are very excited to offer you this short introduction to the world of Linux. Before you get started, we would like to take the opportunity to explain the intent and scope of this module.  Do not be concerned if you have little or no Linux experience. This module is designed as an introduction for beginning learners without previous Linux training. If you find this material useful, you may consider continuing with our NDG Linux Essentials or NDG Introduction to Linux courses to build additional knowledge. Additional information regarding these courses can be found at the end of this module.  As you may already be aware, the Linux kernel has found its way into an incredible number of diverse systems. It can now be found in everything from automobiles to rockets, watches to televisions, and netbooks to the fastest supercomputers. Linux only accounts for a relatively small percentage of the operating systems found on desktop computers, but has gained widespread use in servers, Internet of Things (IoT) devices, networking equipment, smartphones, and many other devices you may not think of as even being computers. From the home router providing your Internet connection to the server this course is hosted on, it is likely that multiple Linux powered devices are currently enabling you to read this page.  We hope that you find the NDG Linux Unhatched Module helpful. Congratulations on taking your first steps into the world of Linux!																					
72	Welcome to Linux Unhatched	Why Learn Linux?	Linux skills are needed for many IT professional tracks. For example, knowledge of basic Linux commands is a prerequisite for IT certification programs like the popular Cisco Certified CyberOps Associate certification. To learn more about how Linux applies to Cisco Certified CyberOps Associate, visit the section at the end of this course called Linux for Cisco Certified CyberOps Associate.  What Is Linux? Linux is operating system software that runs on a hardware computer system. An operating system is software that allows other programs like word processors and web browsers to be installed and run on a computer.  Who can use linux You may have heard of Linux and thought that only technologically advanced individuals are using it for programming, developing, or maybe even hacking! Although it is true that many techies use Linux, that doesn’t mean Linux is too difficult to learn or isn’t useful for beginners.  IT professions that require knowledge of Linux skills Network Engineering - Network engineers are responsible for managing the network computers use to transmit data. Knowledge of Linux is critical for network engineers since more than half of the world’s servers are Linux-based.  - Cybersecurity - Cybersecurity professionals monitor and investigate security threats to data on systems. Linux is used in cybersecurity to carry out system penetration testing and assess the vulnerability of a system. - Developing/Programming - Developers and programmers design computer applications. The Linux command-line allows developers and programmers to script; a function that allows a user to put commands together to execute complex actions on a computer.  - Data Analysis - Data analysts and scientists sort and analyze data sets to find patterns in order to report and predict trends and behavior. 																					
73	Welcome to Linux Unhatched	Before You Get Started	Tour If you have never used an NDG Online course before, get familiar with our interface by taking the tour. You can access it at any time using the Help menu in the upper right hand corner.  gambar 1  Objectives This content aligns to various LPI Linux Essentials Exam 010-160 objectives. Please note that Linux Unhatched is designed to be an exploratory module for beginners which aligns to various LPI Linux Essentials objectives, but is not designed to be a comprehensive exam preparation module. For more information click on the Objectives tab:  gambar 2  Virtual Machines To the right of the content you've been provided a Linux virtual machine to practice your skills on. All of the examples in this course were created on our machines and we encourage you to try them out! Be aware that the output you see on the command line interface will not always match the example in content exactly. gambar 3		https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/1_1.png	https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/1_3.png 	https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/VM_Intro.png																	
74	Navigating Basic Command Syntax	Basic Command Syntax	 A command is a software program that when executed on the CLI (command line interface), performs an action on the computer. When you type in a command, a process is run by the operating system that can read input, manipulate data and produce output. A command runs a process on the operating system, which then causes the computer to perform a job.  To execute a command, the first step is to type the name of the command. Click in the terminal on the right. Type ls (lowercase letters L and S) and hit Enter. The result should resemble the example below: gambar 1  The name of the command is often based on what it does or what the developer who created the command thinks will best describe the command's function. For example, the ls command displays a listing of information about files. Associating the name of the command with something mnemonic for what it does may help you to remember commands more easily.  Most commands follow a simple pattern of syntax:  command [options…] [arguments…] In other words, you type a command, followed by any options and/or arguments before pressing the Enter key. Typically options alter the behavior of the command and arguments are items or values for the command to act upon. Although there are some commands in Linux that aren’t entirely consistent with this syntax, most commands use this syntax or something similar.	[     {         "title": "Consider This",         "content": "Every part of the command is normally case-sensitive, so LS is incorrect and will fail, but ls is correct and will execute. gambar 2"     } ]	https://drive.google.com/file/d/1dyV28rqnJHT8dxeVLDWRxU301PbhJ8La/view?usp=share_link	https://drive.google.com/file/d/11IbYpZj_hB963TBLs-Xie1DSO-gnFiaC/view?usp=share_link																		
75	Navigating Basic Command Syntax	Arguments	command [options…] [arguments…] An argument can be used to specify something for the command to act upon. The ls command can be given the name of a directory as an argument, and it will list the contents of that directory. In the next example, the Documents directory will be used as an argument:  gambar 1  The resulting output is a list of files contained with the Documents directory.  Because Linux is open source, there are some interesting secrets that have been added by developers. For example, the aptitude command is a package management tool available on some Linux distributions. This command will accept moo as an argument:  gambar 2 		https://drive.google.com/file/d/1mJZXJZRlB8ZdA3g1hWhMLekY8e3IAMjb/view?usp=share_link	https://drive.google.com/file/d/1hu_7wpHFu4HAN1pWMyTtorDLwmMCvItf/view?usp=share_link																		
76	Navigating Basic Command Syntax	Options	command [options…] [arguments…] Options can be used to alter the behavior of a command. On the previous page, the ls command was used to list the contents of a directory. In the following example, the -l option is provided to the ls command.   Often the character is chosen to be mnemonic for its purpose, like choosing the letter l for long or r for reverse. By default, the ls command prints the results in alphabetical order, so adding the -r option will print the results in reverse alphabetical order.    Multiple options can be used at once, either given as separate options as in -l -r or combined like -lr. The output of all of these examples would be the same: ls -l -r ls -rl ls -lr  As explained above, -l gives a long listing format while -r reverses the listing. The result of using both options is a long listing given in reverse order:  gambar 1  Ultimately, commands can use many combinations of options and arguments. The possibilities for each command will be unique. Remember the aptitude easter egg! It is possible to alter the behavior of this command using options. See what happens when the -v (verbose) option is added:  gambar 2  By combining multiple -v options, we can get a variety of responses: gambar 3		https://drive.google.com/file/d/1kRyuE6YiCMJjhITyCJnFWUQ-JXCv-iew/view?usp=share_link	https://drive.google.com/file/d/1cqmwaoZo_t0GdTA6nqI8mnq_AZohNHIP/view?usp=share_link	https://drive.google.com/file/d/1b3g6PTebSl6pADxvIAlFAYeaGBUkw8MW/view?usp=share_link																	
77	Printing Working Directory	Printing Working Directory	In order to discover where you are currently located within the filesystem, the pwd command can be used. The pwd command prints the working directory, your current location within the filesystem:  pwd [OPTIONS]  The output of the above command indicates that the user is currently in their home folder, shown in the filesystem below. gambar 1 	[     {         "title": "Consider This",         "content": "Don't turn on your printer just yet! In the early days of computing the command line output would be sent to physical printers. This method was replaced by video displays which could display information more quickly. We still use the word print even though the output is just being displayed on your screen. "     },  {         "title": "Consider This",         "content": "Notice our virtual machines employ a prompt that displays the current working directory, emphasized with the color blue. In the first prompt above, the blue ~ is equivalent to /home/sysadmin, representing the user's home directory. (gambar 2)  After changing directories (we will learn how to do this in the next section), the new location can also be confirmed in the new prompt, again shown in blue. gambar 3"     } ]	https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/3_1.png	https://drive.google.com/file/d/1dL4LDcwOvCLrr898gH4HyccUEQQPrTvq/view?usp=sharing	https://drive.google.com/file/d/1ffDIwW-mDSKcxc3SIxFiRIjWfXXxfwow/view?usp=share_link																	
78	Changing Directories	Changing Directories	Files are used to store data such as text, graphics and programs. Directories are a type of file used to store other files–they provide a hierarchical organizational structure. The image below shows an abbreviated version of the filesystem structure on the virtual machines. gambar 1  When you start a fresh virtual machine, either by opening the course or after using the reset button, you are logged in as the sysadmin user in your home directory, highlighted below: gambar 2  To navigate the filesystem structure, use the cd (change directory) command to change directories.  cd [options] [path] If you look back at the graphic above, you will see the Documents directory is located within the home directory, where you are currently located. To move to the Documents directory, use it as argument to the cd command: gambar 3  Directories are equivalent to folders on Windows and Mac OS. Like these more popular operating systems, a Linux directory structure has a top level. It is not called "My Computer", but rather the root directory and it is represented by the / character. To move to the root directory, use the / character as the argument to the cd command. gambar 4  The argument to the cd command is more than just the name of a directory, it is actually a path. A path is a list of directories separated by the / character. For example, /home/sysadmin is the path to your home directory: gambar 5  If you think of the filesystem as a map, paths are the step-by-step directions; they can be used to indicate the location of any file within the filesystem. There are two types of paths: absolute and relative. Absolute paths start at the root of the filesystem, relative paths start from your current location.	[     {         "title": "Absolute Paths",         "content": "An absolute path allows you to specify the exact location of a directory. It always starts at the root directory, therefore it always begins with the / character. The path to the home directory /home/sysadminis an absolute path. The path begins at the root / directory, moves into the home directory, and then into the sysadmin directory.   Use this path as an argument to the cd command to move back into the home directory for the sysadmin user. gambar 6  No output means the command succeeded. Go ahead and confirm this using the pwd command: gambar 7 "     },  {         "title": "Relative Paths",         "content": "A relative path gives directions to a file relative to your current location in the filesystem. Relative paths do not start with the / character, they start with the name of a directory. Take another look at the first cd command example. The argument is an example of the simplest relative path: the name of a directory in your current location.  gambar 8   A relative path begins in from with the current directory, however you don't include it in the path. The first step would be to move into the School directory, and then move into the Art directory. Use the / character to separate the directory names and the result School/Art is a relative path from the Documents directory to the Art directory: gambar 9  Use the relative path as an argument to the cd command to move into the Art directory.  cd School/Art "     },  {  "title": "Shortcuts",         "content": " Regardless of which directory you are in, .. always represents one directory higher relative to the current directory, sometimes referred to as the parent directory. cd ..  cd ~  The . Character  Regardless of which directory you are in, the . character always represents your current directory. For the cd this shortcut is not very useful, but it will come in handy for commands covered in subsequent sections.  The ~ Character  The home directory of the current user is represented by the ~ character. As stated above, you always begin as the sysadmin user, whose home is located at /home/sysadmin.  " } ]	https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/4_1.png	https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/3_1.png	https://drive.google.com/file/d/1GEmzKCQep1cKTMyIN0LqlO3Vu4Te_whP/view?usp=share_link	https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/4_3.png	https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/4_4.png	https://drive.google.com/file/d/1_oQankB8A6buuaRs-9AMIOWp26thzFn2/view?usp=sharing	https://drive.google.com/file/d/1pqCYNYG7dHOPipJLJJwPPRFluSdpyius/view?usp=sharing	https://drive.google.com/file/d/1N7_HJWN-iTXSq4zoq9Y_VUxJrXATuUCh/view?usp=share_link	https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/4_7.png											
79	Listing Files	Listing Files 	LISTING FILES The ls command is used to list the contents of a directory. You've already seen it used a few times before in examples, but this page will help ensure you are comfortable with its use.  ls [OPTIONS] [FILE]  To learn the details about a file, such as the type of file, the permissions, ownerships or the timestamp, perform a long listing using the -l option to the ls command. Below, a listing of the /var/log directory is used as an example, since it provides a variety of output: gambar 1  Each line corresponds to a file contained within the directory. The information can be broken down into fields separated by spaces.   SORTING By default the output of the ls command is sorted alphabetically by filename. It can sort by other methods as well.  The -t option will sort the files by timestamp: gambar 3   The -S option will sort the files by file size: gambar 4  The -r option will reverse the order of any type of sort. Notice the difference when it is added to the previous example: gambar 5  The numbers in file size field switch from descending to ascending.  Used alone the -r option with list the files in reverse alphabetical order: gambar 6 	[     {         "title": "File Type",         "content": " -rw-r--r-- 1 root   root  18047 Dec 20  2017 alternatives.log                     drwxr-x--- 2 root   adm    4096 Dec 20  2017 apache2    The first field actually contains ten characters, where the first character indicates the type of file and the next nine specify permissions. The file types are: gambar 2  The first file alternatives.log is a regular file -, while the second file apache2 is a directory d. "     },  {         "title": "Permissions",         "content": " drwxr-xr-x 2 root   root   4096 Apr 11  2014 upstart Permissions indicate how certain users can access a file. Keep reading to learn more about permissions. "     },  {"title": "Hard Link Count", "content": " -rw-r----- 1 syslog adm    1346 Oct  2 22:17 auth.log This number indicates how many hard links point to this file. Hard links a "},  { "title": "User Owner", "content": " -rw-r----- 1 syslog adm     106 Oct  2 19:57 kern.log User syslog owns this file. Every time a file is created, the ownership is automatically assigned to the user who created it. " },  { "title": "Group Owner", "content": " -rw-rw-r-- 1 root   utmp 292584 Oct  2 19:57 lastlog Indicates which group owns this file " },  { "title": "File Size", "content": " -rw-r----- 1 syslog adm   19573 Oct  2 22:57 syslog Directories and larger files may be shown in kilobytes since displaying their size in bytes would present a very large number. Therefore, in the case of a directory, it might actually be a multiple of the block size used for the file system. Block size is the size of a series of data stored in the filesystem. " },  { "title": "Timestamp", "content": " drwxr-xr-x 2 root   root   4096 Dec  7  2017 fsck This indicates the time that the file's contents were last modified. " },  { "title": "Filename", "content": " -rw-r--r-- 1 root   root  47816 Dec  7  2017 bootstrap.log The final field contains the name of the file or directory. " }, ]	https://drive.google.com/file/d/1Lmf4ISL4_1kqTcICF7eqvFVEC7R1c5Tx/view?usp=sharing	https://drive.google.com/file/d/1cQ8RmXBFJ6VtnmNfDQnepgioq2bW676_/view?usp=sharing	https://drive.google.com/file/d/1CsvP0n2LlSL6grPZdUIZFACPnenXJ_Mu/view?usp=share_link	https://drive.google.com/file/d/1VOP1oT-Vwi9hlMCCcxmCgo9BzOcvSPZS/view?usp=sharing	https://drive.google.com/file/d/1qiweAUHmzjfMSQE0cCwuF3oJdWxpNbtZ/view?usp=sharing	https://drive.google.com/file/d/1bYgDx3GLNwedi5Ll83it8nfswrMmrFPc/view?usp=sharing														
80	Administrative Access	Administrative Access	ADMINISTRATIVE ACCESS There are many Linux commands which deal with sensitive information like passwords, system hardware, or otherwise operate under other exceptional circumstances. Preventing regular users from executing these commands helps to protect the system. Logging in as the root user provides administrative access, allowing for the execution of some of the privileged commands.  THE su COMMAND  su OPTIONS USERNAME  The su command allows you to temporarily act as a different user. It does this by creating a new shell. The shell is simply a text input console that lets you type in commands. By default, if a user account is not specified, the su command will open a new shell as the root user, which provides administrative privileges.  After executing the su command, a password is required. On our virtual machines, the password for both the root and sysadmin accounts is netlab123. If you ever forget, it is displayed every time a new virtual machine is started. As a security measure, the password will not be visible as it is typed. gambar 1  Note the command prompt has changed to reflect that you are now logged in as the root user. To logout and return to the sysadmin account, use the exit command. Note the prompt changes back: gambar 2  To avoid executing any sensitive commands, we’ve configure the Steam Locomotive command, the sl command, to require administrative access. If the command is executed as sysadmin, it fails: gambar 3  Use the su command to switch to the root account and execute the sl command with administrative access: gambar 4  Use the exit command again to return to the sysadmin account. gambar 2  THE sudo COMMAND  sudo [OPTIONS] COMMAND  The sudo command allows a user to execute a command as another user without creating a new shell. Instead, to execute a command with administrative privileges, use it as an argument to the sudo command. Like the su command, the sudo command assumes by default the root user account should be used to execute commands.  Execute the sl command as the root user by putting sudo in front of it: gambar 5  Once the command has completed, notice the prompt has not changed, you are still logged in as sysadmin. The sudo command only provides administrative access for the execution of the specified command. This is an advantage as it reduces the risk that a user accidentally executes a command as root. The intention to execute a command is clear; the command is executed as root if prefixed with the sudo command. Otherwise, the command is executed as a regular user.	[     {         "title": "Follow Along",         "content": " Utilizing the login shell option is recommended, as the login shell fully configures the new shell with the settings of the new user. This option can be specified one of three ways:  su - su -l su --login  "     } ]	https://drive.google.com/file/d/18ZpERsmYGOHS1W7jxTVdwZZ9aL4kdsHF/view?usp=sharing	https://drive.google.com/file/d/1uvxcCABDqR3SSzOuXU1Bmeyyl0Iv9GNH/view?usp=share_link	https://drive.google.com/file/d/1T1USP0ojCQLDn9tQueHWQ5W6ic-3d8AO/view?usp=sharing	https://drive.google.com/file/d/14F9s7T3YhJnojPRLoJhJsui330lvg6hx/view?usp=sharing	https://drive.google.com/file/d/1TkIG3miR1BcFY4pQvQ5xHn3Cnh0ROWsd/view?usp=share_link															
81	Permissions	Permissions	PERMISSIONS  Permissions determine the ways different users can interact with a file or directory. When listing a file with the ls -l command, the output includes permission information. For the example we will use a script called hello.sh located in the Documents directory: gambar 1  FILE TYPE FIELD   -rw-r--r-- 1 sysadmin sysadmin 647 Dec 20  2017 hello.sh  The first character of this output indicates the type of a file. Recall that if the first character is a -, this is a regular file. If the character was a d, it would be a directory.  PERMISSIONS FIELD  -rw-r--r-- 1 sysadmin sysadmin 647 Dec 20  2017 hello.sh  After the file type character, the permissions are displayed. The permissions are broken into three sets of three characters:  OWNER  -rw-r--r-- 1 sysadmin sysadmin 647 Dec 20  2017 hello.sh  The first set is for the user who owns the file. If your current account is the user owner of the file, then the first set of the three permissions will apply and the other permissions have no effect.  The user who owns the file, and who these permissions apply to, can be determined by the user owner field:  -rw-r--r-- 1 sysadmin sysadmin 647 Dec 20  2017 hello.sh  GROUP  -rw-r--r-- 1 sysadmin sysadmin 647 Dec 20  2017 hello.sh  The second set is for the group that owns the file. If your current account is not the user owner of the file and you are a member of the group that owns the file, then the group permissions will apply and the other permissions have no effect.  The group for this file can be determined by the group owner field:  -rw-r--r-- 1 sysadmin sysadmin 647 Dec 20  2017 hello.sh  OTHER  -rw-r--r-- 1 sysadmin sysadmin 647 Dec 20  2017 hello.sh  The last set is for everyone else, any one who that first two sets of permissions do not apply to. If you are not the user who owns the file or a member of the group that owns the file, the third set of permissions applies to you.  PERMISSIONS TYPE There are three different permissions that can be placed on a file or directory: read, write, and execute. The manner in which these permissions apply differs for files and directories, as shown in the chart below: gambar 1	[     {         "title": "Consider This",         "content": " Understanding which permissions apply is an important skill set in Linux. For example, consider the following set of permissions: -r--rw-rwx. 1 sysadmin staff 999 Apr  10  2013 /home/sysadmin/test In this scenario, the user sysadmin ends up having less access to this file than members of the staff group or everyone else. The user sysadmin only has the permissions of r--. It doesn't matter if sysadmin is a member of the staff group; once user ownership has been established, only the user owner's permissions apply. "     } ]	https://drive.google.com/file/d/1scUFxByjoMTEbm4ZIzOFJLao4pWYy1Dd/view?usp=share_link																			
82	Changing File Permissions	Changing File Permissions	CHANGING FILE PERMISSIONS  The chmod command is used to change the permissions of a file or directory. Only the root user or the user who owns the file is able to change the permissions of a file.  There are two techniques for changing permissions with the chmod command: symbolic and octal. The symbolic method is good for changing one set of permissions at a time. The octal or numeric method requires knowledge of the octal value of each of the permissions and requires all three sets of permissions (user, group, other) to be specified every time. For the sake of simplicity, only the symbolic method will be covered. To learn more about the octal method check out NDG Linux Essentials!  THE SYMBOLIC METHOD  chmod [<SET><ACTION><PERMISSIONS>]... FILE To use the symbolic method of chmod first indicate which set of permissions is being changed:\nchmod [<SET><ACTION><PERMISSIONS>]... FILE \nSymbol Meaning \nu User: The user who owns the file.\ng Group: The group who owns the file.\no Others: Anyone other than the user owner or member of the group owner.\na All: Refers to the user, group and others.  \nNext, specify an action symbol:\nchmod [<SET><ACTION><PERMISSIONS>]... FILE \nSymbol Meaning \n+ Add the permission, if necessary \n= Specify the exact permission \n- Remove the permission, if necessary \nAfter an action symbol, specify one or more permissions to be acted upon. \nchmod [<SET><ACTION><PERMISSIONS>]... FILE \nSymbol Meaning \nr read \nw write \nx execute \nFinally, a space and the pathnames for the files to assign those permissions. \nchmod [<SET><ACTION><PERMISSIONS>]... FILE \nThe file hello.sh used in the examples on the previous page is a script.  However currently, the execute permission is not set for any of the permission groups: \n-rw-r--r-- 1 sysadmin sysadmin 647 Dec 20  2017 hello.sh   Since the system is currently logged in as the sysadmin user, and sysadmin is the owner of this file, giving the user owner the execute permission should allow you to execute this script. Using the chmod command with the u character to represent the user owner permission set, the + character to indicate a permission is being added, and the x character to represent the execute permission  chmod u+x hello.sh  The user owner now has the execute permission listed: \n-rwxr--r-- 1 sysadmin sysadmin 647 Dec 20  2017 hello.sh  \nFinally, attempt to execute the script again. Use the command syntax shown below: \n./hello.sh	[     {         "title": "Consider This",         "content": "Why is the command named chmod instead of chperm? Permissions used to be referred to as modes of access, so the command chmod really means change the modes of access."     } ]																				
83	Changing File Ownership	Changing File Ownership	CHANGING FILE OWNERSHIP   Initially, the owner of a file is the user who creates it. The chown command is used to change the ownership of files and directories. Changing the user owner requires administrative access. A regular user cannot use this command to change the user owner of a file, even to give the ownership of one of their own files to another user. However, the chown command also permits changing group ownership, which can be accomplished by either root or the owner of the file.  To change the user owner of a file, the following syntax can be used. The first argument, [OWNER], specifies which user is to be the new owner. The second argument, FILE, specifies which file's ownership is changing.  chown [OPTIONS] [OWNER] FILE   Currently all the files in the Documents directory are owned by the sysadmin user. This can be verified by using the ls -l command. Recall that the third column indicates the user owner. gambar 1  To switch the owner of the hello.sh script to the root user, use root as the first argument and hello.sh as the second argument. Don't forget to use the sudo command in order to gain the necessary administrative privileges. Use password netlab123 if prompted: gambar 2  Confirm the user owner has changed by executing the ls -l command. Use the filename as an argument to limit the output: gambar 3  The user owner field is now root indicating the change was successful.  -rwxr--r-- 1 root sysadmin 647 Dec 20  2017 hello.sh	[     {         "title": "Consider This",         "content": " Try executing the hello.sh script again. It fails! Why? gambar 4  Only the user owner has the execute permission, and now the root user is the user owner. This file now requires administrative access to execute. Use the sudo command to execute the script as the root user. gambar 5 "     } ]	https://drive.google.com/file/d/1p8vgGWMcysjF7iExml2AboaA8bxlzmCT/view?usp=drive_link	https://drive.google.com/file/d/1SaBbfnIJ_x7X-N4UpFnKnXiwZf2oSTO3/view?usp=drive_link	https://drive.google.com/file/d/16YBv7gNEkbNAzxA5TWhPQrdKALqzDnE1/view?usp=drive_link	https://drive.google.com/file/d/1FD5JqwHNNdWEyCd01yNKP68lUN4YffX7/view?usp=drive_link	https://drive.google.com/file/d/19mDlyXWGBsVIsdzvJ0CV-zErbOjvk3Qu/view?usp=drive_link															
84	Viewing Files	Viewing Files	VIEWING FILES  There are a few Linux commands available to view the content of files. The cat command, which stands for “concatenate”, is often used to quickly view the contents of small files.  The cat command will display the entire contents of the file, hence why it is mainly recommended for smaller files where the output is limited and does not require scrolling. To view the contents of a file using the cat command, simply type the command and use the name of the file you wish to view as the argument:  cat [OPTIONS] [FILE]  Our VM has a few small text files that you can view with the cat command. One such file is the animals.txt file: gambar 1  The cat command displays all five lines of the file above. When viewing larger files, the cat command can result in very lengthy output that cannot be paused to scroll through. A better method of viewing long text files, is with a pager command which has a functionality that can pause and scroll through the output of the file.  Another way to view the content of files is by using the head and tail commands. These commands are used to view a select number of lines from the top or bottom of a file. Taking a look at a few lines of a file can sometimes be helpful to ensure that the file is the one you want to use. \nAnother reason to preview only the first or last few lines, is because some files, such as system log files are frequently updated with new entries. Similar to the cat command, the head and tail commands use the name of the file you want to view as the argument to the command: \nhead [OPTIONS] [FILE] \ntail [OPTIONS] [FILE] \nTo compare the output of the head and tail commands with that of the cat command, use the cat command to view the entire alpha.txt file: gambar 2  In the example above, all twenty-six lines of the file are displayed. \nTo filter the output and view lines from the top of the alpha.txt file, use the head command: gambar 3  Then, to view lines at the bottom of the alpha.txt file, you use the tail command: gambar 4  By examining the output of the head and tail commands above, you can see that the default behavior of the head and tail commands in this shell is to display ten lines. \nThe -n option with the head and tail commands can be used to specify the amount of lines to display. To use the -n option, specify the amount of lines from the file you want to display after the option and use the filename as an argument: \nhead -n number_of_lines filename \nFor example, to change the output of the head command to view the first five lines of the alpha.txt file: gambar 5  View the last five lines of the alpha.txt file: gambar 6	[     {         "title": "Note",         "content": " Examples of pager commands include the more and less commands. These and additional commands used for viewing files in Linux are covered in NDG Linux Essentials. "     } ]	https://drive.google.com/file/d/1l8uCq_Qe0Uaky_wqv3ziLiYKdYGqbXqv/view?usp=drive_link	https://drive.google.com/file/d/1FDzsOG8oPcC_gxjYuNiGZjxWZ1ZR4ZGD/view?usp=drive_link	https://drive.google.com/file/d/1D6nXeIUrXcwia9MWsCe8Sj14ajC6E5IO/view?usp=drive_link	https://drive.google.com/file/d/1zvCHdRXd2320JV-UF7DERDoJhNfD7v5t/view?usp=drive_link	https://drive.google.com/file/d/1Wg0W19DnzS-psFHF_2pAb42Ob2uW2J35/view?usp=drive_link	https://drive.google.com/file/d/1mVLiTryskeAIfI8HsnuApfc1R5q-IJxV/view?usp=drive_link														
85	Copying Files	Copying Files	COPYNG FILES  Creating copies of files can be useful for numerous reasons:  If a copy of a file is created before changes are made, then it is possible to revert back to the original. A copy of a file can be used to transfer a file to removable media devices. A copy of an existing document can be used as a template for a new document.  cp [OPTIONS] SOURCE DESTINATION  The cp command is used to copy files. Similar to the mv command, it requires at least two arguments: a source and a destination. For example, to copy the /etc/passwd file to the current directory, use the following command:   cp /etc/passwd .  The result of executing the previous command would create a copy of the contents of the /etc/passwd file in the Documents directory, since that is our current directory. This can be confirmed using the ls command: gambar 1   	[     {         "title": "Consider This",         "content": " Permissions can have an impact on file management commands, such as the cp command. In order to copy a file, it is necessary to have execute permission to access the directory where the file is located and the read permission for the file being copied. \nIt is also necessary to have write and execute permission on the directory the file is being copied to. Typically, there are two places where you should always have write and execute permission on the directory: your home directory and the /tmp directory. "     } ]	https://drive.google.com/file/d/1AOdkW3qT3cCikFhxpJAAVyZOafWvcN0I/view?usp=drive_link																			
86	Copying Files	Copying Files	COPYNG FILES  The dd command is a utility for copying files or entire partitions at the bit level. \ndd [OPTIONS] OPERAND \nThis command has several useful features, including: \nIt can be used to clone or delete (wipe) entire disks or partitions. \nIt can be used to copy raw data to removable devices, such as USB drives and CDROMs. \nIt can backup and restore the MBR (Master Boot Record). \nIt can be used to create a file of a specific size that is filled with binary zeros, which can then be used as a swap file (virtual memory). \nLet's examine the following example. The dd command creates a file named /tmp/swapex with 50 blocks of zeros that are one megabyte in size: gambar 1  The dd command uses special arguments to specify how it will work. The following illustrates some of the more commonly used arguments: gambar 2	[     {         "title": "Consider This",         "content": " No block size or count needs to be specified when copying over entire devices. For example, to clone from one hard drive (/dev/sda) to another (/dev/sdb) execute the following command: dd if=/dev/sda of=/dev/sdb "     } ]	https://drive.google.com/file/d/1w70ePlBkA3VpiZhH2SEwjZesuqSAMjE-/view?usp=drive_link	https://drive.google.com/file/d/1oOqpPwKk8ILc73aBVJYDwJujFzOS9wi8/view?usp=drive_link																		
87	Moving Files	Moving Files	MOVING FILES  The mv command is used to move a file from one location in the filesystem to another.  mv SOURCE DESTINATION  The mv command requires at least two arguments. The first argument is the source, a path to the file to be moved. The second argument is the destination, a path to where the file will be moved to. The files to be moved are sometimes referred to as the source, and the place where the files are to be placed is called the destination.  To move the people.csv file into the Work directory, use the filename as the source, and the directory name as the destination:  mv people.csv Work     If a file is moved from one directory to another without specifying a new name for the file, it will retain its original name. The move above can be confirmed using the ls command on the Work directory:  ls Work  The mv command is able to move multiple files, as long as the final argument provided to the command is the destination. For example, to move three files into the School directory: gambar 1  Moving a file within the same directory is an effective way to rename it. For example, in the following example the animals.txt file is given a new name of zoo.txt: \nmv animals.txt zoo.txt  gambar 2	[     {         "title": "Consider This",         "content": " Permissions can have an impact on file management commands, such as the mv command. Moving a file requires write and execute permissions on both the origin and destination directories."     } ]	https://drive.google.com/file/d/1t1cRUYjzQ3fukWXn_xMYVQF1NNzZdt4W/view?usp=drive_link	https://drive.google.com/file/d/1Bk3KSk_eSn1uDVACw3n_WWqq1hpAdjEs/view?usp=drive_link																		
88	Removing Files	Removing Files	REMOVING FILES   The rm command is used to delete files and directories. It is important to keep in mind that deleted files and directories do not go into a "trash can" as with desktop-oriented operating systems. When a file is deleted with the rm command, it is almost always permanently gone. \nrm [OPTIONS] FILE  Without any options, the rm command is typically used to remove regular files: gambar 1  The rm command will ignore directories that it's asked to remove; to delete a directory, use a recursive option, either the -r or -R options. Just be careful since these options are "recursive", this will delete all files and all subdirectories: gambar 2	[     {         "title": "Consider This",         "content": " Permissions can have an impact on file management commands, such as the rm command. To delete a file within a directory, a user must have write and execute permission on a directory. Regular users typically only have this type of permission in their home directory and its subdirectories. "     }, { "title": "Warning", "content": "The rm command removes files permanently. To repeat the examples above, reset the terminal using the reset button."} ]	https://drive.google.com/file/d/16bIsIp8jWmnO87wgJBsBm9L_3MbIjwaQ/view?usp=drive_link	https://drive.google.com/file/d/18g6z3OYk3DP0V0XAb0UZZhKN_WeTLB2I/view?usp=drive_link																		
89	Filtering Input	Filtering Input	FILTERING INPUT   The grep command is a text filter that will search input and return lines which contain a match to a given pattern. \ngrep [OPTIONS] PATTERN [FILE]  For example, the passwd file we previously copied into the Documents directory contains the details of special system accounts and user accounts on the system. This file can be very large, however the grep command can be used to filter out information about a specific user, such as the sysadmin user. Use sysadmin as the pattern argument and passwd as the file argument: gambar 1  The command above returned the line from the passwd which contains the pattern sysadmin.  The example above uses a simple search term as the pattern, however grep is able to interpret much more complex search patterns.	[     {         "title": "Follow Along",         "content": " Use the following command to switch to the Documents directory: cd ~/Documents If the example below fails, repeat the example from Section 11: Copying Files: cp /etc/passwd . "     }, {         "title": "Note",         "content": " This line is the /etc/passwd entry pertaining to the user sysadmin and provides information that is beyond the scope of this course. To learn more about this file, check out NDG Linux Essentials. "     } ]	https://drive.google.com/file/d/1UieqkwtvP6w3Bfx8beAss2GlfhvsxUZ7/view?usp=drive_link																			
90	Filtering Input	Regular Expressions	REGULAR EXPRESSIONS  Regular expressions have two common forms: basic and extended. Most commands that use regular expressions can interpret basic regular expressions. However, extended regular expressions are not available for all commands and a command option is typically required for them to work correctly. \nThe following table summarizes basic regular expression characters: gambar 1  The following table summarizes the extended regular expressions, which must be used with either the egrep command or the -E option with the grep command: gambar 2	[     {         "title": "Consider This",         "content": " Understanding which permissions apply is an important skill set in Linux. For example, consider the following set of permissions: -r--rw-rwx. 1 sysadmin staff 999 Apr  10  2013 /home/sysadmin/test In this scenario, the user sysadmin ends up having less access to this file than members of the staff group or everyone else. The user sysadmin only has the permissions of r--. It doesn't matter if sysadmin is a member of the staff group; once user ownership has been established, only the user owner's permissions apply. "     } ]	https://drive.google.com/file/d/17XP1wRT_PqOV-e3GWQeVfuBsAfGBiqXP/view?usp=drive_link	https://drive.google.com/file/d/1f76MtClpBvkk-9PAmW5Kg0yfAFlvdhD2/view?usp=drive_link																		
91	Filtering Input	Basic Patterns	BASIC PATTERNS  Regular expressions are patterns that only certain commands are able to interpret. Regular expressions can be expanded to match certain sequences of characters in text. The examples displayed on this page will make use of regular expressions to demonstrate their power when used with the grep command. In addition, these examples provide a very visual demonstration of how regular expressions work, the text that matches will be displayed in a red color.  The simplest of all regular expressions use only literal characters, like the example from the previous page: gambar 1  ANCHOR CHARACTERS  Anchor characters are one of the ways regular expressions can be used to narrow down search results. For example, the pattern root appears many times in the /etc/passwd file: gambar 2  The first anchor character ^ is used to ensure that a pattern appears at the beginning of the line. For example, to find all lines in /etc/passwd that start with root use the pattern ^root. Note that ^ must be the first character in the pattern to be effective. gambar 3  For the next example, first examine the alpha-first.txt file. The cat command can be used to print the contents of a file: gambar 4  The second anchor character $ can be used to ensure a pattern appears at the end of the line, thereby effectively reducing the search results. To find the lines that end with an r in the alpha-first.txt file, use the pattern r$: gambar 5  Again, the position of this character is important, the $ must be the last character in the pattern in order to be effective as an anchor.  MATCH A SINGLE CHARACTER WITH .   The following examples will use the red.txt file: gambar 6  One of the most useful expressions is the period . character. It will match any character except for the new line character. The pattern r..f would find any line that contained the letter r followed by exactly two characters (which can be any character except a newline) and then the letter f: gambar 7  The same concept can be repeated using other combinations. The following will find four letter words that start with r and with d: gambar 8  This character can be used any number of times. To find all words that have at least four characters the following pattern can be used: gambar 9  The line does not have to be an exact match, it simply must contain the pattern, as seen here when r..t is searched for in the /etc/passwd file: gambar 10  MATCH A SINGLE CHARACTER WITH [ ]  The square brackets [ ] match a single character from the list or range of possible characters contained within the brackets.\nFor example, given the profile.txt file: gambar 11  To find all the lines in the profile.txt which have a number in them, use the pattern [0123456789] or [0-9]: gambar 12  On the other hand, to find all the lines which contain any non-numeric characters, insert a ^ as the first character inside the brackets. This character negates the characters listed: gambar 13  When other regular expression characters are placed inside of square brackets, they are treated as literal characters. For example, the . normally matches any one character, but placed inside the square brackets, then it will just match itself. In the next example, only lines which contain the . character are matched. gambar 14  MATCH A REPEATED CHARACTER OR PATTERNS WITH *   The regular expression character * is used to match zero or more occurrences of a character or pattern preceding it. For example e* would match zero or more occurrences of the letter e: gambar 15  It is also possible to match zero or more occurrences of a list of characters by utilizing the square brackets. The pattern [oe]* used in the following example will match zero or more occurrences of the o character or the e character: gambar 16  When used with only one other character, * isn't very helpful. Any of the following patterns would match every string or line in the file: .* e* b* z*. gambar 17  gambar 18  This is because * can match zero occurrences of a pattern. In order to make the * useful, it is necessary to create a pattern which includes more than just the one character preceding *. For example, the results above can be refined by adding another e to make the pattern ee* effectively matching every line which contains at least one e. gambar 19  STANDART INPUT If a file name is not given, the grep command will read from standard input, which normally comes from the keyboard with input provided by the user who runs the command. This provides an interactive experience with grep where the user types in the input and grep filters as it goes. Feel free to try it out, just press Ctrl-D when you're ready to return to the prompt. gambar 20 	[     {         "title": "Note",         "content": " Do not mistake [^0-9] to match lines which do not contain numbers. It actually matches lines which contain non-numbers. Look at the original file to see the difference. The third and sixth lines only contain numbers, they do not contain non-numbers so those lines do not match. "     } ]	https://drive.google.com/file/d/1Z_WzrOoVwhXA1rSqg8rt8pED__vc_86a/view?usp=drive_link	https://drive.google.com/file/d/1tTGRjkQnXYaVEAKI0doIJWgpMNmCmWht/view?usp=drive_link	https://drive.google.com/file/d/1MSJ5nW38RdhCMKgHmI_w15LQhO0uU6PL/view?usp=drive_link	https://drive.google.com/file/d/1qW7zo_uwsDUd5-fVr-4V5GswTL1Tjenc/view?usp=drive_link	https://drive.google.com/file/d/1MFZEw40PFmcdH0e1o9i3vketOq_1Q3yp/view?usp=drive_link	https://drive.google.com/file/d/12fuNKZOcFf3mXfSyT3By2QoR-0TCTNTv/view?usp=drive_link	https://drive.google.com/file/d/1kwmVHGuFoMPu6mSo9Y_W65kAcM1JISL1/view?usp=drive_link	https://drive.google.com/file/d/1k5DMAQdjDgLNqjxQyLuFSgRqMmrP9plU/view?usp=drive_link	https://drive.google.com/file/d/1ldYDkU7cEql9WLYPtMDihjTlhj4Ovhg5/view?usp=drive_link	https://drive.google.com/file/d/1jJfxNDaIVqbfzztq5dJ4GgIRH2ym7PZi/view?usp=drive_link	https://drive.google.com/file/d/1Cbjn120YoIXY4_0hXuJwyN3E14PTxPrx/view?usp=drive_link	https://drive.google.com/file/d/1fgCKySu8d2Y3Xmhh_NtP-0t6eRnYxVmD/view?usp=drive_link	https://drive.google.com/file/d/1uT95aGnCfHXKCMe2tR7nM0DOobnO5smi/view?usp=drive_link	https://drive.google.com/file/d/17CqbDDRVMbonmo0I_ggz13QjPf51bO5v/view?usp=drive_link	https://drive.google.com/file/d/1Awjm0QhHjzzyT5fc0JKgPqGowdTh39Ga/view?usp=drive_link	https://drive.google.com/file/d/1LP0fK2UXKhYBkglJkSYmmZmoirL0MNny/view?usp=drive_link	https://drive.google.com/file/d/1bdFtrc0rWaYnRZA-WWAevUluU26kE0HW/view?usp=drive_link	https://drive.google.com/file/d/1B9BfHz3yVBvqz52DG8BCzVLfwvc6tLPJ/view?usp=drive_link	https://drive.google.com/file/d/1f6vUjCz1tWwAqUExN5FHhghmjdL2lgwY/view?usp=drive_link	https://ndg-content-dev.s3.amazonaws.com/media/images/linux-essentials/comptia_1.gif
92	Shutting Down	Shutting Down	SHUTTING DOWN  The shutdown command arranges for the system to be brought down in a safe way. All logged-in users are notified that the system is going down and within the last five minutes leading up to the shutdown, new logins are prevented. \nshutdown [OPTIONS] TIME [MESSAGE] gambar 1  Unlike other commands used to bring the system down, the shutdown command requires a time argument specifying when the shutdown should begin. Formats of this time argument can be the word now, a time of day in the format hh:mm or the number of minutes to delay in the format +minutes. gambar 2  The shutdown command also has an optional message argument, indicating a message that will appear in the terminals of all users. For example: gambar 3	[     {         "title": "Follow Along",         "content": " The shutdown command requires administrative access, switch to the root account for this section using the following command. Use netlab123 as the password. gambar 4 "     }, {"title": "Consider This", "content": "The clock on our system may be set to a different timezone than the one in which you are located. To check the time in the terminal, use the date command. On our machines, the default format of the date command output is as follows: weekday month day hour:minute:second UTC year. The letters UTC present in the output indicates that the time is being displayed as Universal Coordinated Time."} ]	https://drive.google.com/file/d/1ZJxuWNQDQho866cWmo6EfVAqGD6S1-aK/view?usp=drive_link	https://drive.google.com/file/d/1PRezpQzq7Tdg5BiL6TIVPElA45EUcfvh/view?usp=drive_link	https://drive.google.com/file/d/1M0FUk-7LeS0tYqgeQiWI5TvKsuGDn7Ft/view?usp=drive_link	https://drive.google.com/file/d/1pcUXvUUKIDTuU52UfzY9nw83LPBPWfIW/view?usp=drive_link																
93	Network Configuration	Network Configuration	NETWORK CONFIGURATION  The ifconfig command stands for "interface configuration" and is used to display network configuration information.  ifconfig [OPTIONS]   Not all network settings are important for this module, but it is important to note in the following example that the IPv4 address of the primary network device eth0 is 192.168.1.2 and that the device is currently active (UP): gambar 1  The ifconfig command can also be used to temporarily modify network settings. Typically these changes should be permanent, so using the ifconfig command to make such changes is fairly rare.  The ping command is used to verify connectivity between two computers. It does this by sending packets to another machine on a network. If the sender receives a response it should be possible to connect to that machine.  Information is sent using “packets”; the encapsulated unit of data sent over a network. In order for the packets to find the other computer, they will need an address. The ping command uses IP addresses to identify a computer on the network that it wants to connect to.  By default, the ping command will continue sending packets until the break command (CTL + C) is entered at the console. To limit how many pings are sent, use the -c option followed by the number of pings to be sent. The example below shows ping being limited to 4 iterations with -c 4.  If the ping command is successful, you will see output like the following: gambar 2  If the ping command fails, you will receive a message stating, Destination Host Unreachable: gambar 3  The ping command may fail even though the remote machine is connecting. This is because some administrators configure their machines, or even entire networks, not to respond to ping requests as a security measure. The ping command also works with a hostname, or domain name like yahoo.com. Using this first saves time, if that ping command is successful, there is proper name resolution AND the IP address is functioning properly as well.	[     {         "title": "Consider This",         "content": " The lo device is referred to as the loopback device. It is a special network device used by the system when sending network-based data to itself. "     }, { "title": "Follow Along", "content": "Exit the root account using the exit command:  exit "} ]	https://drive.google.com/file/d/1tTkuRoy4LFglvLNylUw9y6gKeHlTRNsY/view?usp=drive_link	https://drive.google.com/file/d/1IC394mh2GdRXxZ31CpdSvcxQeWVRhNgx/view?usp=drive_link	https://drive.google.com/file/d/1n4E68b-qSSbEaAt4OK8yFVOxSrmKdrLy/view?usp=drive_link																	
94	Viewing Processes	Viewing Processes	VIEWING PROCESSES  Running a command results in something called a process. In the Linux operating system, processes are executed with the privileges of the user who executes the command. This allows for processes to be limited to certain capabilities based upon the user identity.  Although there are exceptions, generally the operating system will differentiate users based upon whether they are the administrator. Typically regular users, like the sysadmin user, cannot control another user's processes. Users who have administrative privileges, like the root account, can control any user processes, including stopping any user process.  The ps command can be used to list processes.  ps [OPTIONS] gambar 1  The ps command will display the processes that are running in the current terminal by default. In the example above, the bottom line is the process created by the execution of the ps command. The output includes the following columns of information:  PID: The process identifier, which is unique to the process. This information is useful for controlling the process by its ID number.  TTY: The name of the terminal where the process is running. This information is useful for distinguishing between different processes that have the same name.  TIME: The total amount of processor time used by the process. Typically, this information isn't used by regular users.  CMD: The command that started the process.  Instead of viewing just the processes running in the current terminal, users may want to view every process running on the system. The -e option will display every process: gambar 2  Typically, the -f option is also used as it provides more detail in the output of the command, including options and arguments. Look for the ps command on the last line, the CMD column now includes the options used: gambar 3 		https://drive.google.com/file/d/1kVutwcQZ4HrKgP5Xn2nH1wRt9YXQK-u5/view?usp=drive_link	https://drive.google.com/file/d/1obYXvwG7qqwKb8vo4ly_szvoI8OPHNx1/view?usp=drive_link	https://drive.google.com/file/d/10UeoSGkD6GDNZw7alHe_c57ATOCCFyTd/view?usp=drive_link																	
95	Package Management	Package Management	PACKAGE MANAGEMENT  Package management is a system by which software can be installed, updated, queried or removed from a filesystem. In Linux, there are many different software package management systems, but the two most popular are those from Debian and Red Hat. The virtual machines for this course use Ubuntu, a derivative of Debian. \nAt the lowest level of the Debian package management system is the dpkg command. This command can be tricky for novice Linux users, so the Advanced Package Tool, apt-get, a front-end program to the dpkg tool, makes management of packages even easier.  INSTALLING PACKAGES  Package files are commonly installed by downloading them directly from repositories located on Internet servers. The Debian repositories contain more than 65,000 different packages of software. Before installing a package, it is good practice to refresh the list of available packages using the apt-get update command. \nPlease allow a few minutes for the following commands to execute. \nsudo apt-get update gambar 1  To search for keywords within these packages, you can use the apt-cache search command. \napt-cache search [keyword]\nThe keyword that is used should match part of the name or description of the package that is to be located. Multiple keywords can be used to further clarify the search; for example, the search term web server would provide better results than web or server. \nTo find packages associated with the cow keyword: gambar 2  Once you've found the package that you want to install, you can install it with the apt-get install command: \nsudo apt-get install [package] gambar 3  UPDATING PACKAGES  The apt-get install command can also update a package, if that package is installed and a newer version is available. If the package is not already on the system, it would be installed; if it is on the system, it would be updated.\nUpdating all packages of the system should be done in two steps. First, update the cache of all packages available with apt-get update. Second, execute the apt-get upgrade command and all packages and dependencies will be updated. \napt-get update \napt-get upgrade gambar 4  REMOVING PACKAGES  The apt-get command is able to either remove or purge a package. The difference between the two is that purging deletes all package files, while removing deletes all but the configuration files for the package. \nAn administrator can execute the apt-get remove command to remove a package or the apt-get purge command to purge a package completely from the system.\napt-get remove [package] \napt-get purge [package] \nFor example, to purge cowsay completely, execute the following command. Enter Y when prompted: gambar 5  	[     {         "title": "Consider This",         "content": " The cowsay command is a configurable talking cow! Use a word or phrase as an argument: gambar 6  We recommend enclosing the argument in single quotes to prevent the shell from interpreting special characters. "     } ]	https://drive.google.com/file/d/1IwYAzOczziTxw_Bb4rqRaRviaQx3lCyD/view?usp=drive_link	https://drive.google.com/file/d/1UJG6pKp13D7q60FJkJ7EkzKIIxpGDhwr/view?usp=drive_link	https://drive.google.com/file/d/1DWiZol62fPoQWREK2H2kqu82A3Tj2zMx/view?usp=drive_link	https://drive.google.com/file/d/1qBVbB1GyKXGd0UgTvxAbjFgeymcqvgWg/view?usp=drive_link	https://drive.google.com/file/d/1ntoam2x4COw6QH1LuF1YtWBVwTiixWVp/view?usp=drive_link	https://drive.google.com/file/d/1VPs47oDCltmYPCGy-M7X0nQBIyO3dIRk/view?usp=drive_link														
96	Updating User Passwords	Updating User Passwords	UPDATING USER PASSWORDS  The passwd command is used to update a user’s password. Users can only change their own passwords, whereas the root user can update the password for any user.  passwd [OPTIONS] [USER]  For example, since we are logged in as the sysadmin user we can change the password for that account. Execute the passwd command. You will be prompted to enter the existing password once and the new password twice. For security reasons, no output is displayed while the password is being typed. The output is shown as follows: gambar 1  If the user wants to view status information about their password, they can use the -S option: gambar 2  The output fields are explained below: gambar 3  The root user can change the password of any user. If the root user wants to change the password for sysadmin, they would execute the following command: gambar 4	[     {         "title": "Follow Along",         "content": " Switch the root account using the following command. Use netlab123 as the password: gambar 5  Exit the root account using the exit command: gambar 6 "     } ]	https://drive.google.com/file/d/1bv1n0x59_TupQobktu-pM9Qk4uXSxJcR/view?usp=drive_link	https://drive.google.com/file/d/1QTwfTfKqlm07ZNJdMC342EyCikavbIq6/view?usp=drive_link	https://drive.google.com/file/d/1s__575MRyrEJZangWrXzGJJRRLxclW-f/view?usp=drive_link	https://drive.google.com/file/d/18vZqFW_VHceBKqewAYV-PsewYG3Kbc2r/view?usp=drive_link	https://drive.google.com/file/d/1dZlIygjW7pV_-O98pEQgAwKiMpq4ztW_/view?usp=drive_link	https://drive.google.com/file/d/1XSBGxkol4S2wC11rpdiqIA1F03J2k4GN/view?usp=drive_link														
97	Redirection	Redirection	REDIRECTION  Adding content to files in Linux can be done in a variety of ways. Linux has a few text editors that can be used to add content to a file. However, this method requires some familiarity with Linux text editor commands.  There is a way in Linux to quickly add content to a file using a command line feature called input/output (I/O) redirection. I/O redirection allows for information in the command line to be sent to files, devices, and other commands. The input or output of a command is redirected from its default destination to a different location. I/O redirection is like a series of train tracks, where a switch can be enabled to direct the output of a command on a different track so it goes somewhere else in the shell. In this section, we are writing to files by redirecting the output of a command to a file. \nWhen it comes to command input and output there are three paths, or “tracks”. These paths are called file descriptors. The first file descriptor is standard input, abbreviated as STDIN. Standard input is the information the command receives and processes when it is executed, essentially what a user types on the keyboard. The second file descriptor is standard output, abbreviated as STDOUT. Standard output is the information that the command displays, the output of the command. The last file descriptor is standard error, abbreviated as STDERR. STDERR, are the error messages generated by commands that are not correctly executed. The following are examples of how file descriptors will appear in the terminal: \nStandard Input (STDIN) \ngambar 1 \nStandard Output (STDOUT) \ngambar 2                                               \nStandard Error (STDERR) \ngambar 3                        \nThis section will cover one of the three file descriptors, STDOUT, and how to redirect STDOUT from where you normally see it, in the terminal, to a file in the filesystem. To use redirection, simply use a greater-than symbol > along with a filename: \n[COMMAND] > [FILE] \nTo demonstrate redirection, we will use the output of the cat command. Without redirection, the output of the cat command will be displayed in the terminal: gambar 4  Now use the > character to redirect the STDOUT of the cat food.txt command above to a new file called newfile1.txt: gambar 5  As you can see, there is no output displayed since the STDOUT has been redirected to the newfile1.txt file. Verify that the STDOUT of the cat food.txt command is in newfile1.txt: gambar 6  This is useful if you need to copy content from an important file to another file in order to edit the contents without modifying the original file. However, what if you want to add a comment or note to a file? To do this, you can use the echo command. The echo command is used to print output in the terminal: gambar 7  Printing comments to the screen is a fun feature but the echo command can be made more useful by using redirection. Using the echo command, content can be added to the newfile1.txt file: gambar 8  Notice that the STDOUT of the echo command has replaced the original content of the file. This is because the single > character will overwrite any contents in an existing file. To append rather than overwrite content to a file, use a double greater-than symbol >>: gambar 9		https://drive.google.com/file/d/1_SenwZynKnL3Ei-aiMlOklsFsGCf8dmh/view?usp=drive_link	https://drive.google.com/file/d/1Nhd0HT32WgNOpnHlu0HpHbbqZpxuQ7VE/view?usp=drive_link	https://drive.google.com/file/d/1rp0qBBJ_5xuIYoDUNQwwibhkoksckl2i/view?usp=drive_link	https://drive.google.com/file/d/165qpuxUdeDbVTJgmDbQ8XXWsq9z2cNoR/view?usp=drive_link	https://drive.google.com/file/d/1t0DUYSPjfq1H5a8vhORmVaKf7BLs17PT/view?usp=drive_link	https://drive.google.com/file/d/1khzqi5wcQTlyFCVLB9uEz4FYHtx1dqVZ/view?usp=drive_link	https://drive.google.com/file/d/1acpD64fmlc9QwoI4RL5jsbN-LJfPnrsS/view?usp=drive_link	https://drive.google.com/file/d/1j0dME2bDPTFTu7GhbUZ2mRElGFU9DOM4/view?usp=drive_link	https://drive.google.com/file/d/1U-m4ZU2lXYsaMzQDJaFgHNrhfr1_zQGE/view?usp=drive_link											
98	Text Editor	Text Editor	TEKS EDITOR  The premier text editor for Linux and UNIX is a program called vi. While there are numerous editors available for Linux that range from the tiny editor nano to the massive emacs editor, there are several advantages to the vi editor:  The vi editor is available on every Linux distribution in the world. This is not true of any other editor.  The vi editor can be executed both in a CLI (command line interface) and a GUI (graphical user interface).  While new features have been added to the vi editor, the core functions have been around for decades. This means that if someone learned the vi editor in the 1970s, they could use a modern version without any problem. While that seems trivial, it may not seem so trivial twenty years from now.  In reality, most Linux systems don't include the original vi, but an improved version of it known as vim, for vi improved. This fact may be hidden by most Linux distributions. For the most part, vim works just like vi, but has additional features. For the topics that will be covered in this course, either vi or vim will work.  COMMAND MODE MOVEMENT  Initially, the program starts in command mode. Command mode is used to type commands, such as those used to move around a document, manipulate text, and access the other two modes. To return to command mode at any time, press the Esc key.  Once some text has been added into a document, to perform actions like moving the cursor, the Esc key needs to be pressed first to return to command mode. This seems like a lot of work, but remember that vi works in a terminal environment where a mouse is useless.  Movement commands in vi have two aspects, a motion and an optional number prefix, which indicates how many times to repeat that motion. The general format is as follows:  [count] motion  The following table summarizes the motion keys available: gambar 1  These motions can be prefixed with a number to indicate how many times to perform the movement. For example, 5h would move the cursor five characters to the left and 3w would move the cursor three words to the right.  To move the cursor to a specific line number, type that line number followed by the G character. For example, to get to the fifth line of the file type 5G. 1G or gg can be used to go to the first line of the file, while a lone G will take you to the last line. To find out which line the cursor is currently on, use CTRL+G.  COMMAND MODE ACTIONS  The standard convention for editing content with word processors is to use copy, cut, and paste. The vi program has none of these. Instead, vi uses the following three commands: gambar 2  The motions learned from the previous page are used to specify where the action is to take place, always beginning with the present cursor location. Either of the following general formats for action commands is acceptable:  action [count] motion [count] action motion  DELETE  Delete removes the indicated text from the page and saves it into the buffer, the buffer being the equivalent of the "clipboard" used in Windows or Mac OSX. The following table provides some common usage examples: gambar 3  CHANGE  Change is very similar to delete; the text is removed and saved into the buffer, however, the program is switched to insert mode to allow immediate changes to the text. The following table provides some common usage examples: gambar 4  YANK  Yank places content into the buffer without deleting it. The following table provides some common usage examples: gambar 5  PUT  Put places the text saved in the buffer either before or after the cursor position. Notice that these are the only two options, put does not use the motions like the previous action commands. gambar 6  SEARCHING IN vi  Another standard function that word processors offer is find. Often, people use CTRL+F or look under the edit menu. The vi program uses search. Search is more powerful than find because it supports both literal text patterns and regular expressions.  To search forward from the current position of the cursor, use the / to start the search, type a search term, and then press the Enter key to begin the search. The cursor will move to the first match that is found.  To proceed to the next match using the same pattern, press the n key. To go back to a previous match, press the N key. If the end or the beginning of the document is reached, the search will automatically wrap around to the other side of the document.  To start searching backwards from the cursor position, start by typing ?, then type the pattern to search for matches and press the Enter key.  INSERT MODE  Insert mode is used to add text to the document. There a few ways to enter insert mode from command mode, each differentiated by where the text insertion will begin. The following table covers the most common: gambar 7   EX MODE   Originally, the vi editor was called the ex editor. The name vi was the abbreviation of the visual command in the ex editor which switched the editor to "visual" mode.  In the original normal mode, the ex editor only allowed users to see and modify one line at a time. In the visual mode, users could see as much of the document that will fit on the screen. Since most users preferred the visual mode to the line editing mode, the ex program file was linked to a vi file, so that users could start ex directly in visual mode when they ran the vi link.  Eventually, the actual program file was renamed vi and the ex editor became a link that pointed the vi editor.  When the ex mode of the vi editor is being used, it is possible to view or change settings, as well as carry out file-related commands like opening, saving or aborting changes to a file. In order to get to the ex mode, type a : character in command mode. The following table lists some common actions performed in ex mode: gambar 8   A quick analysis of the table above reveals that if an exclamation mark, !, is added to a command, it then attempts to force the operation. For example, imagine you make changes to a file in the vi editor and then try to quit with :q, only to discover that the command fails. The vi editor doesn't want to quit without saving the changes you made to a file, but you can force it to quit with the ex command :q!.	[  {         "title": "Consider This",         "content": " Although the ex mode offers several ways to save and quit, there's also ZZ that is available in command mode; this is the equivalent of :wq. There are many more overlapping functions between ex mode and command mode. For example, ex mode can be used to navigate to any line in the document by typing : followed by the line number, while the G can be used in command mode as previously demonstrated. "     },     {         "title": "Follow Along",         "content": " If you have a text file open, exit it by executing the :q! command. This will quit without saving changes. gambar 9 "     } ]	https://drive.google.com/file/d/1mhAziYT9EM8scrcBJZ_bJa6VkxnVkWPt/view?usp=drive_link	https://drive.google.com/file/d/1A_eFGtgV66gwdMykdEE2KJgPfkPdesR6/view?usp=drive_link	https://drive.google.com/file/d/13huQmfM2qDfPH24zI96gLtG0MkealSzj/view?usp=drive_link	https://drive.google.com/file/d/1mXIsszyUNYqjtCULwe2GOdIEd9k6YlZA/view?usp=drive_link	https://drive.google.com/file/d/1ZF8oAmG0GFNDG-tMJ0K9eYLKGLWWFlnx/view?usp=drive_link	https://drive.google.com/file/d/1Rcjcu5NMwCAD0CU3dnVKnoOqnw-g949z/view?usp=drive_link	https://drive.google.com/file/d/1XfKt8rLLghWpP7igF3jbpnm1ZitWqMVU/view?usp=drive_link	https://drive.google.com/file/d/1QCVTXZdfIFwaKYCDde5vnLaaFSKScx6d/view?usp=drive_link	https://drive.google.com/file/d/1EkqKmrBIG2Xffg4k-soSjH3T60XZaxA4/view?usp=drive_link											
99	Moving Forward	Moving Forward	MOVING FORWARD  We hope you've enjoyed this brief introduction into the world of Linux. The content contained here aligns to the Linux knowledge covered under LPI Linux Essentials exam objectives, but there is so much more! Get certification level Linux skills to advance your career!  NDG LINUX ESSENTIALS  If you're interested in broadening your Linux knowledge, Cisco Networking Academy also offers three Linux courses. NDG Linux Essentials is perfect for beginners looking to grasp the basics, while the NDG Linux Series offers beginners more rigorous in-depth coverage. gambar 1  The NDG Linux Essentials course is designed to prepare you for the Linux Professional Institute Linux Essentials Professional Development Certificate, which validates a demonstrated understanding of:  FOSS, the various communities, and licenses Knowledge of open source applications in the workplace as they relate to closed source equivalents Basic concepts of hardware, processes, programs and the components of the Linux Operating System How to work on the command line and with files How to create and restore compressed backups and archives System security, users/groups and file permissions for public and private directories How to create and run simple scripts To obtain the Linux Essentials Professional Development Certificate you must pass Linux Essentials (LPI-010) which covers:  The Linux community and a career in open source Finding your way on a Linux system The power of the command line The Linux operating system Security and file permissions The Linux Essentials Professional Development Certificate is the beginning of your path to becoming a Linux certified professional. Information about the Linux Professional Institute certifications can be found by going to http://www.lpi.org.  Do not be concerned if you have little or no Linux experience. This course is the perfect starting place designed to teach all of the concepts from square one. However, if you do not find this material challenging enough, consider starting with NDG Introduction to Linux I, a more rigorous introductory course.  NDG LINUX SERIES gambar 2  The NDG Linux Series is designed to prepare you for the Linux Professional Institute Level 1 Certification. LPIC-1 is a Linux Server Professional certification for Linux administrators that confirms your ability to do the following tasks:  Work at the Linux Command line Perform easy maintenance tasks: help users, add users to a larger system, backup and restore, shutdown and reboot. Install and configure a workstation (including X) and connect it to a LAN, or a standalone PC to the internet. To obtain the LPIC-1 certification you must pass Exam 101 and 102. NDG Introduction to Linux I is designed to prepare you for Exam 101, which covers:  System Architecture Linux Installation and Package Management GNU and Unix Commands Devices, Linux Filesystems, Filesystem Hierarchy Standard NDG Introduction to Linux II aligns to the Exam 102 objectives, which cover:  Shells, Scripting and Data Management Interfaces and Desktops Administrative Tasks Essential System Services Networking Fundamentals Security The LPIC-1 certification is the first of three LPI professional certifications. Information about all Linux Professional Institute certifications is available at: http://www.lpi.org.  IT ESSENTIALS  For more on fundamental computer and career skills for entry-level IT jobs, check out the rest of IT Essentials. gambar 3  IT Essentials covers fundamental computer and career skills for entry-level IT jobs. The IT Essentials curriculum includes hands-on labs that provide practical experience. Virtual tools help you hone your troubleshooting skills and practice what you learn. \nDevelop working knowledge of how computers operate \nDevelop critical thinking and complex problem-solving skills using hands-on labs and virtual learning tools \nApply skills and procedures to install and upgrade hardware and software and troubleshoot systems \nPractice what you learn on real equipment and using the Cisco Packet Tracer simulation tool \nGet immediate feedback on your work through built-in quizzes and tests \nGet connected to the global Cisco Networking Academy community		https://ndg-content-dev.s3.amazonaws.com/media/images/linux-essentials/linux_essentials.png	https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/NDG_Introduction_to_Linux_Course___Cisco_NetAcad.png	https://ndg-content-dev.s3.amazonaws.com/media/images/linux-essentials/it_essentials.png																	
100	Moving Forward	Linux for Cisco Certified CyberOps Associate	Congratulations on finishing this short introductory Linux course! You have just learned many Linux concepts that can help you go further in your IT journey. We highlighted that Linux is everywhere. We also stressed that learning Linux is beneficial for a wide variety of technology careers. You may consider continuing your IT studies in a variety of areas, including networking, IoT and one of the IT specialties most currently in-demand, cybersecurity. \nOne of the most important challenges we face in our digital universe today is cybersecurity. There is an increasing amount of smart devices that can be connected to networks, which is convenient for users who want to stay connected. However, this can also make networks vulnerable to individuals and organizations who are attempting to gain malicious access to devices and networks. As a result, the field of cybersecurity is growing and in recent years, training cybersecurity professionals has become a priority for information technology institutions. \nThe Cisco Network Academy has developed a certification program to prepare individuals who are interested in a cybersecurity career path. The Cisco Certified CyberOps Associate certification is designed to provide knowledge of the specific tasks expected for monitoring information systems. With this in mind, if you are just beginning your IT studies, or if you are interested in exploring paths in IT, it may be worth noting that there is a demand for professionals trained in Cisco Certified CyberOps Associate.  The best part is that the basic Linux skills covered in this course can be applied, along with additional training, to a Cisco Certified CyberOps Associate learning track. Learning basic Linux skills can improve the ability to perform specific tasks in Cisco Certified CyberOps Associate training, as well as grasp concepts and objectives taught in the Cisco Certified CyberOps Associate course. \nConsider that when learning to monitor and detect threats, Cisco Certified CyberOps Associate learners are required to learn about different operating systems and how to troubleshoot and analyze these operating systems. Since Linux is used in mobile devices, servers, and client-machines, it is important to learn how to navigate the Linux operating system. For this reason, analyzing servers running Linux makes up many of the Cisco Certified CyberOps Associate learning objectives. \nUnderstanding Linux allows cybersecurity students to forensically analyze the Linux filesystem, monitor Linux servers, as well as client-machines, devices, and other technology running Linux. Some of the commands and tools covered in this course are basic requirements for the skills mentioned above. The table below highlights how what you have learned in this course is beneficial for a Cisco Certified CyberOps Associate learning track: gambar 1  In this course you learned about performing basic Linux operations, administrative, and security-related tasks. Cybersecurity professionals need to know how to perform these tasks across a variety of OS including, Windows, MacOS, and Linux. The NDG Linux courses are designed to teach a variety of commands, terms and utilities that will help prepare you for a career in cybersecurity. Check out some of the Linux commands needed for Cisco Certified CyberOps Associate below: gambar 2  To learn more about Linux and commands and utilities to create a foundation of Linux knowledge to help you go for further in training that is beneficial for a Cisco Certified CyberOps Associate learning track, take look at other NDG Linux courses.		https://drive.google.com/file/d/1Gm2MmOClCYyuH9iHqjtlvYibVbMxTtgs/view?usp=drive_link	https://ndg-content-dev.s3.amazonaws.com/media/images/unhatched/Unhatched_ccna_commands.png																																										